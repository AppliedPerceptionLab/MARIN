#include "sender.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////  CONSTRUCTOR  //////////////////////////////////////////////
Sender::Sender( QObject *parent, QString thisaddress, int port ) : QObject( parent ) {
    
    this->parent = parent;
    setServerAddress( SERVER_ADDRESS );
    this->thisaddress = thisaddress;
    this->port = port;
    
    udpServerSocket->SetIPAddress( thisaddress.toStdString().c_str() );
    udpServerSocket->SetPortNumber( port );
    
    ServerTimer = igtl::TimeStamp::New();
    
    //TODO: Should eventually give user control over this value.
    int netWorkBandWidthInBPS = TARGET_BIT_RATE; //networkBandwidth is in kbps
    int time = floor( 8 * RTP_PAYLOAD_LENGTH * 1e9 / netWorkBandWidthInBPS + 1.0 ); // the needed time in nanosecond to send a RTP payload.
    rtpWrapper->packetIntervalTime = time;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////  DESTRUCTOR   ////////////////////////////////////////////
Sender::~Sender(){
    //TODO
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////   CLOSE_SOCKET   /////////////////////////////////////////
void Sender::closeSocket(){
    //TODO
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////   CHANGE_HOST   ///////////////////////////////////////////
void Sender::change_host( std::string str ){
    //TODO
    qWarning() << "This function is not yet defined.";
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////   CHANGE_PORT   ///////////////////////////////////////////
void Sender::change_port( int p ){
    qWarning() << "[Sender] New port: " << p;
    //TODO
    //This shouldn't be used
    port = p;
    closeSocket();
    connected = false;
}
